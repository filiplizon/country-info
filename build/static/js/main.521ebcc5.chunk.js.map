{"version":3,"sources":["actions/types.js","actions/actions.js","operations/operations.js","reducers/index.js","store/index.js","helpers/GlobalStyle.js","helpers/mainTheme.js","templates/MainTemplate.js","components/Link/Link.js","assets/images/bgQuiz.png","assets/images/illustration.png","templates/QuizTemplate.js","helpers/animations.js","components/Heading/Heading.js","components/Paragraph/Paragraph.js","components/Button/Button.js","components/PointBox/PointBox.js","components/SelectionPanel/SelectionPanel.js","components/Flag/Flag.js","components/Input/Input.js","components/QuestionWrapper/QuestionWrapper.js","assets/images/Location.svg","components/Summary/Summary.js","components/Quiz/Quiz.js","components/Logo/Logo.js","assets/images/logo.png","components/Header/Header.js","components/Card/Card.js","components/CardWrapper/CardWrapper.js","components/HomePage/HomePage.js","views/App/App.js","index.js"],"names":["fetch","countries","type","types","chooseType","quizType","chooseLevel","level","setCountriesLevel","setQuizQuestions","setAnswer","answer","checkAnswer","correctAnswer","changeQuestion","resetLevel","resetType","setNextLevel","setBestScore","score","fetchCountries","a","response","json","isAnswerCorrect","state","isCorrect","toLowerCase","countriesForQuiz","counter","name","capital","initialState","countriesByLevel","easy","medium","hard","countryCodes","levels","next","points","bestScore","flags","capitals","quizLength","start","isChecked","rootReducer","action","filter","alpha3Code","includes","_","sampleSize","store","createStore","composeWithDevTools","applyMiddleware","thunk","GlobalStyle","createGlobalStyle","theme","primary","secondary","grey100","grey200","grey300","black","fontWeight","light","bold","fontSize","xs","s","m","l","xl","xxl","boxShadow","connect","mapDispatchToProps","dispatch","getAllCountries","actions","getAllCountriesAction","MainTemplate","children","useEffect","StyledLink","styled","Link","StyledWrapper","div","bqQuiz","StyledArrowIcon","ArrowIcon","InnerWrapper","StyledIllustration","illustration","mapStateToProps","QuizTemplate","to","onClick","className","grow","keyframes","StyledHeading","h1","p","StyledButton","button","animation","animationDelay","Button","StyledPointBox","PointBox","Heading","StyledParagraph","Paragraph","column","StyledIcon","SelectionPanel","StyledFlag","img","Flag","flag","quiz","src","alt","StyledInput","input","Input","onChange","onKeyPress","placeholder","value","StyledMessage","hidden","QuestionWrapper","e","target","key","row","StyledImage","Summary","Quiz","StyledLogo","Logo","StyledHeader","header","Header","searchCountryFn","LogoImage","li","hiddenInfo","color","StyledCountryName","h2","StyledPararaph","Card","toggleInfoVisibility","this","setState","render","props","id","currency","language","population","region","subregion","timezone","Component","StyledCardWrapper","ul","CardWrapper","length","map","country","offsetVertical","currencies","languages","toLocaleString","timezones","HomePage","filteredCountries","findCountry","App","exact","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.521ebcc5.chunk.js","sourcesContent":["const FETCH_COUNTRIES = 'FETCH_COUNTRIES';\nconst CHOOSE_LEVEL = 'CHOOSE_LEVEL';\nconst CHOOSE_TYPE = 'CHOOSE_TYPE';\nconst SET_COUNTRIES_LEVEL = 'SET_COUNTRIES_LEVEL';\nconst SET_QUIZ_QUESTOINS = 'SET_QUIZ_QUESTOINS';\nconst SET_ANSWER = 'SET_ANSWER';\nconst CHECK_ANSWER = 'CHECK_ANSWER';\nconst CHANGE_QUESTION = 'CHANGE_QUESTION';\nconst RESET_LEVEL = 'RESET_LEVEL';\nconst RESET_TYPE = 'RESET_TYPE';\nconst SET_NEXT_LEVEL = 'SET_NEXT_LEVEL';\nconst SET_BEST_SCORE = 'SET_BEST_SCORE';\n\nexport default {\n  FETCH_COUNTRIES,\n  CHOOSE_LEVEL,\n  CHOOSE_TYPE,\n  SET_COUNTRIES_LEVEL,\n  SET_QUIZ_QUESTOINS,\n  SET_ANSWER,\n  CHECK_ANSWER,\n  CHANGE_QUESTION,\n  RESET_LEVEL,\n  RESET_TYPE,\n  SET_NEXT_LEVEL,\n  SET_BEST_SCORE,\n};\n","import types from './types';\n\nconst fetch = (countries) => ({\n  type: types.FETCH_COUNTRIES,\n  countries,\n});\n\nconst setCountriesLevel = () => ({\n  type: types.SET_COUNTRIES_LEVEL,\n});\n\nconst chooseType = (quizType) => ({\n  type: types.CHOOSE_TYPE,\n  quizType,\n});\n\nconst chooseLevel = (level) => ({\n  type: types.CHOOSE_LEVEL,\n  level,\n});\n\nconst setQuizQuestions = (level) => ({\n  type: types.SET_QUIZ_QUESTOINS,\n  level,\n});\n\nconst setAnswer = (answer) => ({\n  type: types.SET_ANSWER,\n  answer,\n});\n\nconst checkAnswer = (answer, correctAnswer) => ({\n  type: types.CHECK_ANSWER,\n  answer,\n  correctAnswer,\n});\n\nconst changeQuestion = () => ({\n  type: types.CHANGE_QUESTION,\n});\n\nconst resetLevel = (level) => ({\n  type: types.RESET_LEVEL,\n  level,\n});\n\nconst resetType = () => ({\n  type: types.RESET_TYPE,\n});\n\nconst setNextLevel = (level) => ({\n  type: types.SET_NEXT_LEVEL,\n  level,\n});\n\nconst setBestScore = (score, level, quizType) => ({\n  type: types.SET_BEST_SCORE,\n  score,\n  level,\n  quizType,\n});\n\nexport default {\n  fetch,\n  chooseType,\n  chooseLevel,\n  setCountriesLevel,\n  setQuizQuestions,\n  setAnswer,\n  checkAnswer,\n  changeQuestion,\n  resetLevel,\n  resetType,\n  setNextLevel,\n  setBestScore,\n};\n","import actions from 'actions/actions';\n\nconst fetchCountries = async () => {\n  const response = await fetch('https://restcountries.eu/rest/v2/all'); // eslint-disable-line\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getAllCountries = () => async (dispatch) => {\n  const countries = await fetchCountries();\n  dispatch(actions.fetch(countries));\n};\n\nexport const isAnswerCorrect = (state) => {\n  let isCorrect;\n  switch (state.quizType) {\n    case 'flags':\n      isCorrect =\n        state.answer.toLowerCase() === state.countriesForQuiz[state.counter].name.toLowerCase();\n      break;\n    case 'capitals':\n      isCorrect =\n        state.answer.toLowerCase() === state.countriesForQuiz[state.counter].capital.toLowerCase();\n      break;\n    default:\n      return;\n  }\n  return isCorrect; // eslint-disable-line\n};\n","import types from 'actions/types';\nimport { isAnswerCorrect } from 'operations/operations';\nimport _ from 'lodash';\n\nconst initialState = {\n  countries: [],\n  countriesByLevel: { easy: [], medium: [], hard: [] },\n  countryCodes: {\n    easy: [\n      'POL',\n      'RUS',\n      'MEX',\n      'ARG',\n      'AUS',\n      'CHN',\n      'CZE',\n      'BRA',\n      'CAN',\n      'FRA',\n      'DEU',\n      'IND',\n      'ISR',\n      'PRT',\n      'USA',\n      'ESP',\n      'ITA',\n      'BEL',\n      'GRC',\n    ],\n    medium: [\n      'AFG',\n      'ALB',\n      'ARM',\n      'BGR',\n      'CMR',\n      'CHL',\n      'COL',\n      'HRV',\n      'CUB',\n      'EGY',\n      'EST',\n      'GEO',\n      'HUN',\n      'JPN',\n      'KEN',\n      'MNE',\n      'MAR',\n      'PAK',\n      'SRB',\n    ],\n    hard: [\n      'TUV',\n      'VNM',\n      'ZMB',\n      'SOM',\n      'SYC',\n      'SMR',\n      'WSM',\n      'RWA',\n      'QAT',\n      'PNG',\n      'PAN',\n      'PLW',\n      'OMN',\n      'NER',\n      'NIC',\n      'NPL',\n      'NRU',\n      'MOZ',\n      'HTI',\n    ],\n  },\n  countriesForQuiz: [],\n  quizType: '',\n  level: '',\n  levels: {\n    easy: { name: 'easy', next: 'medium' },\n    medium: { name: 'medium', next: 'hard' },\n    hard: { name: 'hard', next: '' },\n  },\n  points: 0,\n  bestScore: {\n    flags: {\n      easy: 0,\n      medium: 0,\n      hard: 0,\n    },\n    capitals: {\n      easy: 0,\n      medium: 0,\n      hard: 0,\n    },\n  },\n  counter: 0,\n  quizLength: 10,\n  start: false,\n  isAnswerCorrect: false,\n  isChecked: false,\n  answer: '',\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_COUNTRIES:\n      return {\n        ...state,\n        countries: action.countries,\n      };\n    case types.CHOOSE_TYPE:\n      return {\n        ...state,\n        quizType: action.quizType,\n      };\n    case types.CHOOSE_LEVEL:\n      return {\n        ...state,\n        level: state.levels[action.level].name,\n      };\n\n    case types.SET_COUNTRIES_LEVEL:\n      return {\n        ...state,\n        countriesByLevel: {\n          easy: state.countries.filter(({ alpha3Code }) =>\n            state.countryCodes.easy.includes(alpha3Code),\n          ),\n          medium: state.countries.filter(({ alpha3Code }) =>\n            state.countryCodes.medium.includes(alpha3Code),\n          ),\n          hard: state.countries.filter(({ alpha3Code }) =>\n            state.countryCodes.hard.includes(alpha3Code),\n          ),\n        },\n      };\n\n    case types.SET_QUIZ_QUESTOINS:\n      return {\n        ...state,\n        countriesForQuiz: _.sampleSize(state.countriesByLevel[action.level], 10),\n      };\n    case types.SET_ANSWER:\n      return {\n        ...state,\n        answer: action.answer,\n      };\n\n    case types.CHECK_ANSWER:\n      return {\n        ...state,\n        isAnswerCorrect: isAnswerCorrect(state),\n        isChecked: !state.isChecked,\n        points: isAnswerCorrect(state) ? state.points + 1 : state.points,\n      };\n    case types.CHANGE_QUESTION:\n      return {\n        ...state,\n        answer: '',\n        isChecked: !state.isChecked,\n        counter: state.counter + 1,\n        isAnswerCorrect: false,\n      };\n    case types.RESET_LEVEL:\n      return {\n        ...state,\n        level: action.level ? action.level : initialState.level,\n        counter: initialState.counter,\n        points: initialState.points,\n        answer: initialState.answer,\n        isChecked: initialState.isChecked,\n      };\n\n    case types.RESET_TYPE:\n      return {\n        ...state,\n        quizType: '',\n      };\n\n    case types.SET_NEXT_LEVEL:\n      return {\n        ...state,\n        level: state.levels[action.level].next,\n      };\n\n    case types.SET_BEST_SCORE:\n      return {\n        ...state,\n        bestScore: {\n          ...state.bestScore,\n          [action.quizType]: {\n            ...state.bestScore[action.quizType],\n            [action.level]:\n              action.score > state.bestScore[action.quizType][action.level]\n                ? action.score\n                : state.bestScore[action.quizType][action.level],\n          },\n        },\n      };\n\n    default:\n      return state;\n  }\n};\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from 'reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;600&display=swap');\n\n\n *,*::before,*::after {\n     box-sizing:border-box;\n     -webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\n }\n\n html {\n     font-size:10px;\n }\n\n body {\n     padding: 0;\n     margin: 0;\n     font-size: 1.6rem;\n     font-family: 'Montserrat', sans-serif;\n }\n`;\n\nexport default GlobalStyle;\n","export const theme = {\n  primary: 'hsl(204, 57%, 34%)',\n  secondary: 'hsl(204, 57%, 49%)',\n  grey100: 'hsl(0, 0%, 96%)',\n  grey200: 'hsl(0, 0%, 94%)',\n  grey300: 'hsl(0, 0%, 64%)',\n  black: 'hsl(0, 0%, 0%)',\n  fontWeight: { light: 300, bold: 600 },\n  fontSize: {\n    xs: '1rem',\n    s: '1.6rem',\n    m: '2rem',\n    l: '2.5rem',\n    xl: '3rem',\n    xxl: '3.5rem',\n  },\n  boxShadow: '0 10px 30px -10px hsla(0, 0%, 0%, 0.1)',\n};\n","import React, { useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport GlobalStyle from 'helpers/GlobalStyle';\nimport { theme } from 'helpers/mainTheme';\nimport { connect } from 'react-redux';\nimport { getAllCountries as getAllCountriesAction } from 'operations/operations';\n\nconst MainTemplate = ({ children, getAllCountries }) => {\n  useEffect(() => {\n    getAllCountries();\n  }, []);\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </>\n  );\n};\n\nMainTemplate.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllCountries: () => dispatch(getAllCountriesAction()),\n});\n\nexport default connect(null, mapDispatchToProps)(MainTemplate);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.primary};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n  font-size: ${({ theme }) => theme.fontSize.s};\n\n  @media (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  @media (min-width: 800px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.s};\n  }\n\n  @media (min-width: 1024px) {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n\n  @media (min-width: 1200px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  :hover {\n    color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nexport default StyledLink;\n","export default __webpack_public_path__ + \"static/media/bgQuiz.a506a389.png\";","export default __webpack_public_path__ + \"static/media/illustration.79db61ac.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport actions from 'actions/actions';\nimport Link from 'components/Link/Link';\nimport bqQuiz from 'assets/images/bgQuiz.png';\nimport illustration from 'assets/images/illustration.png';\nimport { VscArrowLeft as ArrowIcon } from 'react-icons/vsc';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  display: grid;\n  grid-template-rows: 0.6fr 0.25fr;\n  justify-items: center;\n  align-content: center;\n\n  @media (min-width: 768px) {\n    grid-template-rows: 0.6fr 0.35fr;\n  }\n\n  ::after {\n    @media (min-width: 1200px) {\n      position: absolute;\n      right: 0;\n      top: 0;\n      content: '';\n      width: 90vw;\n      height: 100vh;\n      clip-path: polygon(100% 0, 37% 100%, 100% 100%);\n      background-image: url(${bqQuiz});\n      background-position: 50% 35%;\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n\nconst StyledArrowIcon = styled(ArrowIcon)`\n  margin-right: 5px;\n  font-size: ${({ theme }) => theme.fontSize.m};\n`;\n\nconst InnerWrapper = styled.div`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: 1200px) {\n    position: absolute;\n    top: 20%;\n    left: -5%;\n  }\n`;\n\nconst StyledIllustration = styled.div`\n  width: 100%;\n  height: 50vh;\n  position: absolute;\n  bottom: 0;\n  background-image: url(${illustration});\n  background-position: 45% 50%;\n  background-size: cover;\n  transition: opacity 0.2s;\n  z-index: -1;\n\n  &.fade-out {\n    opacity: 0.3;\n  }\n\n  @media (min-width: 1024px) and (orientation: landscape) {\n    width: 55%;\n  }\n\n  @media (min-width: 1200px) {\n    height: 47vh;\n    width: 32%;\n    left: 0%;\n  }\n`;\n\nconst QuizTemplate = ({ children, level, quizType, resetLevel, resetType }) => (\n  <StyledWrapper>\n    {!quizType && (\n      <StyledLink to=\"/\">\n        <StyledArrowIcon /> home\n      </StyledLink>\n    )}\n\n    {quizType && level === '' && (\n      <StyledLink onClick={() => resetType()} to=\"/quiz\">\n        <StyledArrowIcon /> go back\n      </StyledLink>\n    )}\n\n    {level && (\n      <StyledLink onClick={() => resetLevel()} to=\"/quiz\">\n        <StyledArrowIcon /> go back\n      </StyledLink>\n    )}\n\n    <InnerWrapper>{children}</InnerWrapper>\n    {level ? <StyledIllustration className=\"fade-out\" /> : <StyledIllustration />}\n  </StyledWrapper>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetLevel: () => dispatch(actions.resetLevel()),\n  resetType: () => dispatch(actions.resetType()),\n});\n\nconst mapStateToProps = (state) => {\n  const { level, quizType } = state;\n  return { level, quizType };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizTemplate);\n","import { keyframes } from 'styled-components';\n\nexport const grow = keyframes`\n  from {\n   transform:scale(0);\n   opacity: 0;\n  }\n\n  to {\n   opacity:1;\n   transform:scale(1)\n  }\n`;\n","import styled from 'styled-components';\n\nconst StyledHeading = styled.h1`\n  margin: 0;\n  display: inline-block;\n`;\n\nexport default StyledHeading;\n","import styled from 'styled-components';\n\nconst StyledHeading = styled.p`\n  margin: 0;\n`;\n\nexport default StyledHeading;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = ({ children, onClick, secondary, animation, animationDelay }) => (\n  <StyledButton\n    animation={animation}\n    animationDelay={animationDelay}\n    secondary={secondary}\n    onClick={onClick}\n  >\n    {children}\n  </StyledButton>\n);\n\nconst StyledButton = styled.button`\n  width: 90px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${({ theme }) => theme.fontSize.s};\n  background-color: ${({ theme, secondary }) => (secondary ? theme.secondary : theme.primary)};\n  color: white;\n  border: none;\n  border-radius: 15px;\n  padding: 10px 0;\n  transition: transform 0.2s ease;\n  cursor: pointer;\n  outline-color: ${({ theme }) => theme.secondary};\n  z-index: 2;\n  animation: ${({ animation }) => animation} 0.3s both ${({ animationDelay }) => animationDelay};\n\n  :hover {\n    transform: scale(1.05);\n  }\n\n  @media (min-width: 500px) and (orientation: landscape) {\n    width: 70px;\n    padding: 5px 0;\n  }\n\n  @media (min-width: 768px) {\n    width: 130px;\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  @media (min-width: 800px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.s};\n  }\n\n  @media (min-width: 1024px) {\n    width: 180px;\n    font-size: ${({ theme }) => theme.fontSize.xl};\n  }\n\n  @media (min-width: 1200px) {\n    width: 130px;\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { grow } from 'helpers/animations';\n\nconst StyledPointBox = styled.div`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  color: ${({ theme }) => theme.secondary};\n  font-weight: ${({ theme }) => theme.fontWeight.light};\n  animation: ${grow} 0.2s linear both;\n\n  @media (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  @media (min-width: 1024px) {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n\n  @media (min-width: 1200px) {\n    top: 5%;\n    right: 20%;\n    font-size: ${({ theme }) => theme.fontSize.m};\n    background-color: #fff;\n    z-index: 1000;\n  }\n`;\n\nconst PointBox = ({ children }) => <StyledPointBox>{children}</StyledPointBox>;\n\nexport default PointBox;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport actions from 'actions/actions';\nimport { grow } from 'helpers/animations';\nimport Heading from 'components/Heading/Heading';\nimport Paragraph from 'components/Paragraph/Paragraph';\nimport Button from 'components/Button/Button';\nimport PointBox from 'components/PointBox/PointBox';\nimport { FaFlagUsa as FlagIcon } from 'react-icons/fa';\nimport { GiCapitol as CapitolIcon } from 'react-icons/gi';\n\nconst StyledHeading = styled(Heading)`\n  font-size: ${({ theme }) => theme.fontSize.l};\n  color: ${({ theme }) => theme.secondary};\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSize.xl};\n  }\n\n  @media (min-width: 1024px) {\n    font-size: 5rem;\n  }\n\n  @media (min-width: 1024px) and (orientation: landscape) {\n    font-size: 4rem;\n  }\n`;\n\nconst StyledParagraph = styled(Paragraph)`\n  margin-bottom: 40px;\n\n  @media (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n\n  @media (min-width: 1024px) {\n    font-size: ${({ theme }) => theme.fontSize.xl};\n  }\n\n  @media (min-width: 1024px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n`;\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: ${({ column }) => column && 'column'};\n  justify-content: space-around;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    width: 90%;\n  }\n\n  @media (min-width: 1200px) {\n    width: 60%;\n  }\n`;\n\nconst StyledIcon = styled.div`\n  margin-left: 5px;\n\n  @media (min-width: 768px) {\n    margin-left: 10px;\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  @media (min-width: 1024px) {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n\n  @media (min-width: 1200px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n`;\n\nconst SelectionPanel = ({\n  quizType,\n  chooseLevel,\n  chooseType,\n  setQuizQuestions,\n  quizLength,\n  bestScore,\n  setCountriesLevel,\n}) => (\n  <>\n    {quizType && (\n      <PointBox>\n        <Paragraph>Your best scores:</Paragraph>\n        {quizType === 'flags' ? (\n          <>\n            <Paragraph>\n              easy: {bestScore.flags.easy} / {quizLength}\n            </Paragraph>\n            <Paragraph>\n              medium: {bestScore.flags.medium} / {quizLength}\n            </Paragraph>\n            <Paragraph>\n              hard: {bestScore.flags.hard} / {quizLength}\n            </Paragraph>\n          </>\n        ) : (\n          <>\n            <Paragraph>\n              easy: {bestScore.capitals.easy} / {quizLength}\n            </Paragraph>\n            <Paragraph>\n              medium: {bestScore.capitals.medium} / {quizLength}\n            </Paragraph>\n            <Paragraph>\n              hard: {bestScore.capitals.hard} / {quizLength}\n            </Paragraph>\n          </>\n        )}\n      </PointBox>\n    )}\n    <InnerWrapper column onClick={() => setCountriesLevel()}>\n      <StyledHeading>Welcome to the quiz!</StyledHeading>\n      <StyledParagraph>Choose {quizType ? 'level' : 'type'} of the quiz:</StyledParagraph>\n      {quizType ? (\n        <InnerWrapper>\n          <Button\n            animation={grow}\n            secondary\n            onClick={() => {\n              chooseLevel('easy');\n              setQuizQuestions('easy');\n            }}\n          >\n            Easy\n          </Button>\n          <Button\n            animation={grow}\n            animationDelay=\".5s\"\n            secondary\n            onClick={() => {\n              chooseLevel('medium');\n              setQuizQuestions('medium');\n            }}\n          >\n            Medium\n          </Button>\n          <Button\n            animation={grow}\n            animationDelay=\"1s\"\n            secondary\n            onClick={() => {\n              chooseLevel('hard');\n              setQuizQuestions('hard');\n            }}\n          >\n            Hard\n          </Button>\n        </InnerWrapper>\n      ) : (\n        <InnerWrapper>\n          <Button secondary onClick={() => chooseType('flags')}>\n            Flags\n            <StyledIcon>\n              <FlagIcon />\n            </StyledIcon>\n          </Button>\n          <Button secondary onClick={() => chooseType('capitals')}>\n            Capitals\n            <StyledIcon>\n              <CapitolIcon />\n            </StyledIcon>\n          </Button>\n        </InnerWrapper>\n      )}\n    </InnerWrapper>\n  </>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  chooseType: (quizType) => dispatch(actions.chooseType(quizType)),\n  chooseLevel: (level) => dispatch(actions.chooseLevel(level)),\n  setQuizQuestions: (level) => dispatch(actions.setQuizQuestions(level)),\n  setCountriesLevel: () => dispatch(actions.setCountriesLevel()),\n});\n\nconst mapStateToProps = (state) => {\n  const { quizType, countries, countriesByLevel, quizLength, bestScore } = state;\n  return { quizType, countries, countriesByLevel, quizLength, bestScore };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionPanel);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Paragraph from 'components/Paragraph/Paragraph';\n\nconst StyledWrapper = styled.div`\n  width: 140px;\n  height: 100px;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledFlag = styled.img`\n  height: 100%;\n  border: 1px solid ${({ theme }) => theme.grey200};\n`;\n\nconst StyledParagraph = styled(Paragraph)`\n  text-align: center;\n\n  @media (min-width: 360px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  @media (min-width: 500px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.s};\n  }\n\n  @media (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSize.xl};\n  }\n\n  @media (min-width: 800px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  @media (min-width: 1024px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n  @media (min-width: 1200px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n`;\n\nconst Flag = ({ flag, name, quiz }) => (\n  <StyledWrapper>\n    <StyledFlag src={flag} alt={name} />\n    {quiz && <StyledParagraph>{name}</StyledParagraph>}\n  </StyledWrapper>\n);\n\nexport default Flag;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Input = ({ className, onChange, onKeyPress, placeholder, children, value }) => (\n  <StyledWrapper className={className}>\n    <StyledInput\n      value={value}\n      placeholder={placeholder}\n      type=\"text\"\n      onChange={onChange}\n      onKeyPress={onKeyPress}\n    />\n    {children}\n  </StyledWrapper>\n);\n\nconst StyledWrapper = styled.div`\n  width: 150px;\n  margin-left: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  font-size: ${({ theme }) => theme.fontSize.l};\n  color: ${({ theme }) => theme.black};\n\n  @media (min-width: 500px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  @media (min-width: 768px) {\n    width: 300px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 350px;\n    font-size: ${({ theme }) => theme.fontSize.xl};\n  }\n\n  @media (min-width: 1200px) {\n    width: 250px;\n    left: 20%;\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  margin-right: 5px;\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.black};\n  font-size: 1.6rem;\n  background-color: transparent;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.grey300};\n  }\n  @media (min-width: 360px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  @media (min-width: 500px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.s};\n  }\n\n  @media (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSize.xl};\n  }\n\n  @media (min-width: 800px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  @media (min-width: 1024px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n  @media (min-width: 1200px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n`;\n\nexport default Input;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport actions from 'actions/actions';\nimport Paragraph from 'components/Paragraph/Paragraph';\nimport Flag from 'components/Flag/Flag';\nimport Input from 'components/Input/Input';\nimport Button from 'components/Button/Button';\nimport PointBox from 'components/PointBox/PointBox';\n\nconst StyledWrapper = styled.div`\n  height: 45vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n\n  @media (min-width: 768px) {\n    height: 40vh;\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n\n  @media (min-width: 1024px) {\n    font-size: 4rem;\n  }\n\n  @media (min-width: 1024px) and (orientation: landscape) {\n    margin: 65px 0 10px;\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n\n  @media (min-width: 1200px) {\n    height: 50vh;\n    margin: 0;\n  }\n`;\n\nconst StyledMessage = styled(Paragraph)`\n  opacity: ${({ hidden }) => hidden && 0};\n  color: ${({ isAnswerCorrect }) => (isAnswerCorrect ? '#3BC14A' : 'red')};\n  font-weight: ${({ theme }) => theme.fontWeight.light};\n  font-size: 1.3rem;\n\n  @media (min-width: 360px) {\n    font-size: ${({ theme }) => theme.fontSize.s};\n  }\n\n  @media (min-width: 500px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.s};\n  }\n\n  @media (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSize.xl};\n  }\n\n  @media (min-width: 800px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  @media (min-width: 1024px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n  @media (min-width: 1200px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n`;\n\nconst QuestionWrapper = ({\n  level,\n  quizType,\n  countriesForQuiz,\n  counter,\n  quizLength,\n  points,\n  isAnswerCorrect,\n  isChecked,\n  setAnswer,\n  answer,\n  checkAnswer,\n  changeQuestion,\n  setQuizQuestions,\n}) => {\n  useEffect(() => {\n    setQuizQuestions(level);\n  }, []);\n\n  return (\n    <>\n      <PointBox>\n        <Paragraph>Level: {level}</Paragraph>\n        <Paragraph>\n          Question: {counter + 1} / {quizLength}\n        </Paragraph>\n        <Paragraph>\n          Points: {points} / {quizLength}\n        </Paragraph>\n      </PointBox>\n      <StyledWrapper>\n        <Paragraph>\n          {quizType === 'flags'\n            ? 'Guess what country the flag is:'\n            : 'What is capital of this country?'}\n        </Paragraph>\n        {quizType === 'capitals' ? (\n          <Flag\n            flag={countriesForQuiz[counter].flag}\n            name={countriesForQuiz[counter].name}\n            quiz=\"true\"\n          />\n        ) : (\n          <Flag flag={countriesForQuiz[counter].flag} />\n        )}\n        <Input\n          value={answer}\n          placeholder={quizType === 'flags' ? 'Country' : 'Capital'}\n          onChange={(e) => {\n            setAnswer(e.target.value);\n          }}\n          onKeyPress={(e) => {\n            e.key === 'Enter' && answer !== '' && !isChecked && checkAnswer(answer); // eslint-disable-line\n            isChecked && counter < 10 && changeQuestion(); // eslint-disable-line\n          }}\n        />\n        {isChecked && (\n          <StyledMessage isAnswerCorrect={isAnswerCorrect}>\n            {isAnswerCorrect\n              ? 'Good!'\n              : `You're wrong. It's ${\n                  quizType === 'flags'\n                    ? countriesForQuiz[counter].name\n                    : countriesForQuiz[counter].capital\n                }.`}\n          </StyledMessage>\n        )}\n        <Button\n          secondary\n          onClick={() => {\n            answer !== '' && !isChecked && checkAnswer(answer); // eslint-disable-line\n            isChecked && counter < 10 && changeQuestion(); // eslint-disable-line\n          }}\n        >\n          {isChecked ? 'Next' : 'Check'}\n        </Button>\n      </StyledWrapper>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const {\n    level,\n    quizLength,\n    points,\n    counter,\n    quizType,\n    countriesForQuiz,\n    answer,\n    isChecked,\n    isAnswerCorrect,\n  } = state;\n  return {\n    level,\n    quizLength,\n    points,\n    counter,\n    quizType,\n    countriesForQuiz,\n    answer,\n    isChecked,\n    isAnswerCorrect,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setAnswer: (answer) => dispatch(actions.setAnswer(answer)),\n  checkAnswer: (answer, correctAnswer) => dispatch(actions.checkAnswer(answer, correctAnswer)),\n  changeQuestion: () => dispatch(actions.changeQuestion()),\n  setQuizQuestions: (level) => dispatch(actions.setQuizQuestions(level)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionWrapper);\n","export default __webpack_public_path__ + \"static/media/Location.dd8c7afc.svg\";","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport illustration from 'assets/images/Location.svg';\nimport Paragraph from 'components/Paragraph/Paragraph';\nimport Button from 'components/Button/Button';\nimport actions from 'actions/actions';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  height: ${({ row }) => (row ? '' : '60%')};\n  display: flex;\n  flex-direction: ${({ row }) => (row ? 'row' : 'column')};\n  align-items: center;\n  justify-content: space-around;\n\n  @media (min-width: 1200px) {\n    width: ${({ row }) => (row ? '' : '40%')};\n  }\n`;\n\nconst StyledImage = styled.img`\n  width: 160px;\n  height: 160px;\n\n  @media (min-width: 360px) {\n    width: 215px;\n    height: 215px;\n  }\n\n  @media (min-width: 768px) {\n    width: 300px;\n    height: 300px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 350px;\n    height: 350px;\n  }\n\n  @media (min-width: 1200px) {\n    width: 200px;\n    height: 200px;\n  }\n`;\n\nconst StyledParagraph = styled(Paragraph)`\n  margin-bottom: 20px;\n  line-height: 1.5;\n\n  @media (min-width: 360px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n  @media (min-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n\n  @media (min-width: 1024px) {\n    font-size: ${({ theme }) => theme.fontSize.xxl};\n  }\n\n  @media (min-width: 1024px) and (orientation: landscape) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n`;\n\nconst Summary = ({\n  points,\n  quizLength,\n  resetLevel,\n  resetType,\n  level,\n  setNextLevel,\n  setBestScore,\n  quizType,\n}) => {\n  useEffect(() => {\n    setBestScore(points, level, quizType);\n  }, []);\n  return (\n    <StyledWrapper>\n      <StyledImage src={illustration} alt=\"\" />\n      <StyledParagraph>\n        You answered correctly to {points} / {quizLength} questions.\n      </StyledParagraph>\n      {level !== 'hard' ? (\n        <StyledWrapper row>\n          <Button\n            secondary\n            onClick={() => {\n              resetLevel();\n              resetType();\n            }}\n          >\n            Quiz menu\n          </Button>\n          {points >= 5 ? (\n            <Button\n              onClick={() => {\n                resetLevel();\n                setNextLevel(level);\n              }}\n              secondary\n            >\n              Next level\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                resetLevel(level);\n              }}\n              secondary\n            >\n              Try again\n            </Button>\n          )}\n        </StyledWrapper>\n      ) : (\n        <StyledWrapper row>\n          <Button\n            secondary\n            onClick={() => {\n              resetLevel();\n              resetType();\n            }}\n          >\n            Quiz menu\n          </Button>\n          <Button\n            onClick={() => {\n              resetLevel(level);\n            }}\n            secondary\n          >\n            Try again\n          </Button>\n        </StyledWrapper>\n      )}\n    </StyledWrapper>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { points, quizLength, level, levels, quizType } = state;\n  return { points, quizLength, level, levels, quizType };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetLevel: (level) => dispatch(actions.resetLevel(level)),\n  resetType: () => dispatch(actions.resetType()),\n  setNextLevel: (level) => dispatch(actions.setNextLevel(level)),\n  setBestScore: (score, level, quizType) => dispatch(actions.setBestScore(score, level, quizType)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Summary);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport QuizTemplate from 'templates/QuizTemplate';\nimport SelectionPanel from 'components/SelectionPanel/SelectionPanel';\nimport QuestionWrapper from 'components/QuestionWrapper/QuestionWrapper';\nimport Summary from 'components/Summary/Summary';\n\nconst Quiz = ({ level, counter, isChecked }) => (\n  <QuizTemplate>\n    {counter === 9 && isChecked ? (\n      <Summary />\n    ) : (\n      <>{level ? <QuestionWrapper /> : <SelectionPanel />}</>\n    )}\n  </QuizTemplate>\n);\n\nconst mapStateToProps = (state) => {\n  const { level, counter, isChecked } = state;\n  return { level, counter, isChecked };\n};\n\nexport default connect(mapStateToProps)(Quiz);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLogo = styled.img`\n  height: 100%;\n`;\n\nconst StyledWrapper = styled.div`\n  height: 15vh;\n`;\n\nconst Logo = ({ src, alt }) => (\n  <StyledWrapper>\n    <StyledLogo src={src} alt={alt} />\n  </StyledWrapper>\n);\n\nexport default Logo;\n","export default __webpack_public_path__ + \"static/media/logo.7c42f9aa.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport Logo from 'components/Logo/Logo';\nimport LogoImage from 'assets/images/logo.png';\nimport Input from 'components/Input/Input';\nimport Link from 'components/Link/Link';\nimport { FiSearch as SearchIcon } from 'react-icons/fi';\n\nconst Header = ({ searchCountryFn }) => (\n  <StyledHeader>\n    <Logo src={LogoImage} alt=\"CountryInfo logo\" />\n    <Input className=\"Input\" placeholder=\"Search\" onChange={(e) => searchCountryFn(e)}>\n      <SearchIcon />\n    </Input>\n    <Link to=\"/quiz\">QUIZ</Link>\n  </StyledHeader>\n);\n\nconst StyledHeader = styled.header`\n  position: fixed;\n  height: 15vh;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 0.25fr 1fr 0.15fr;\n  align-items: center;\n  padding-right: 10px;\n  background-color: white;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  z-index: 1000;\n\n  @media (min-width: 500px) {\n    padding: 0 3vw;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: 0.15fr 1fr 0.15fr;\n  }\n`;\n\nexport default Header;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Button from 'components/Button/Button';\nimport Flag from 'components/Flag/Flag';\nimport Paragraph from 'components/Paragraph/Paragraph';\n\nconst StyledWrapper = styled.li`\n  min-height: 55vh;\n  width: 95vw;\n  display: grid;\n  grid-template-rows: 0.7fr 0.15fr 0.25fr;\n  background-color: white;\n  margin-bottom: 20px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n\n  @media (min-width: 500px) and (orientation: landscape) {\n    width: 80vw;\n    min-height: 85vh;\n  }\n\n  @media (min-width: 768px) {\n    width: 80vw;\n    min-height: 40vh;\n  }\n\n  @media (min-width: 800px) and (orientation: landscape) {\n    width: 80vw;\n    min-height: 85vh;\n  }\n\n  @media (min-width: 1024px) {\n    width: 30vw;\n  }\n`;\n\nconst InnerWrapper = styled.div`\n  display: ${({ hiddenInfo }) => (hiddenInfo ? 'none' : 'flex')};\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, color }) => color && theme.primary};\n  color: white;\n`;\n\nconst StyledCountryName = styled.h2`\n  margin: 15px 0;\n  width: 100%;\n  font-size: ${({ theme }) => theme.fontSize.m};\n  line-height: 2;\n  text-align: center;\n\n  @media (min-width: 1200px) {\n    font-size: ${({ theme }) => theme.fontSize.l};\n  }\n`;\n\nconst StyledPararaph = styled(Paragraph)`\n  margin: 0 0 10px;\n\n  @media (min-width: 1200px) {\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n\n  :last-child {\n    padding-bottom: 25px;\n  }\n`;\nclass Card extends Component {\n  state = {\n    hiddenInfo: true,\n  };\n\n  toggleInfoVisibility() {\n    this.setState((state) => ({ hiddenInfo: !state.hiddenInfo }));\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      flag,\n      capital,\n      currency,\n      language,\n      population,\n      region,\n      subregion,\n      timezone,\n    } = this.props;\n\n    const { hiddenInfo } = this.state;\n\n    return (\n      <StyledWrapper key={id}>\n        <InnerWrapper>\n          <Flag flag={flag} name={name} />\n        </InnerWrapper>\n        <InnerWrapper color=\"true\">\n          <StyledCountryName>{name}</StyledCountryName>\n          <InnerWrapper hiddenInfo={hiddenInfo}>\n            <StyledPararaph>Capital: {capital}</StyledPararaph>\n            <StyledPararaph>Currency: {currency}</StyledPararaph>\n            <StyledPararaph>Language: {language}</StyledPararaph>\n            <StyledPararaph>Population: {population}</StyledPararaph>\n            <StyledPararaph>Region: {region}</StyledPararaph>\n            <StyledPararaph>Subregion: {subregion}</StyledPararaph>\n            <StyledPararaph>Timezone: {timezone}</StyledPararaph>\n          </InnerWrapper>\n        </InnerWrapper>\n        <InnerWrapper>\n          <Button\n            onClick={() => {\n              this.toggleInfoVisibility();\n            }}\n            hiddenInfo={hiddenInfo}\n          >\n            {hiddenInfo ? 'Show info' : 'Hide info'}\n          </Button>\n        </InnerWrapper>\n      </StyledWrapper>\n    );\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport styled from 'styled-components';\nimport LazyLoad from 'react-lazy-load';\nimport Card from 'components/Card/Card';\n\nconst StyledCardWrapper = styled.ul`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-items: center;\n  margin: 0;\n  padding: 15vh 3% 0;\n\n  @media (min-width: 500px) and (orientation: landscape) {\n    padding: 17vh 3% 0;\n  }\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(3, 1fr);\n    grid-column-gap: 20px;\n    grid-row-gap: 20px;\n  }\n`;\n\nconst CardWrapper = ({ countries }) => (\n  <StyledCardWrapper>\n    {countries.length\n      ? countries.map((country) => (\n          <LazyLoad key={country.alpha3Code} offsetVertical={300}>\n            <Card\n              id={country.alpha3Code}\n              name={country.name}\n              flag={country.flag}\n              capital={country.capital}\n              currency={country.currencies[0].name}\n              language={country.languages[0].name}\n              population={country.population.toLocaleString()}\n              region={country.region}\n              subregion={country.subregion}\n              timezone={country.timezones[0]}\n            />\n          </LazyLoad>\n        ))\n      : null}\n  </StyledCardWrapper>\n);\n\nexport default CardWrapper;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from 'components/Header/Header';\nimport CardWrapper from 'components/CardWrapper/CardWrapper';\n\nclass HomePage extends Component {\n  state = {\n    filteredCountries: [],\n  };\n\n  findCountry(e) {\n    const { countries } = this.props;\n    const filteredCountries = countries.filter((country) =>\n      country.name.toLowerCase().includes(e.target.value.toLowerCase()),\n    );\n    this.setState({ filteredCountries });\n  }\n\n  render() {\n    const { filteredCountries } = this.state;\n    const { countries } = this.props;\n\n    return (\n      <>\n        <Header searchCountryFn={(e) => this.findCountry(e)} />\n        <CardWrapper countries={filteredCountries.length ? filteredCountries : countries} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { countries } = state;\n  return { countries };\n};\n\nexport default connect(mapStateToProps)(HomePage);\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport MainTemplate from 'templates/MainTemplate';\nimport Quiz from 'components/Quiz/Quiz';\nimport HomePage from 'components/HomePage/HomePage';\n\nconst App = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <MainTemplate>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/quiz\" component={Quiz} />\n        </Switch>\n      </MainTemplate>\n    </BrowserRouter>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'views/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}